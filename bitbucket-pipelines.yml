
pipelines:
  default:
    - step:
        name: Check PEP8 codestyle and run tests
        image: python:3.5.2
        caches:
          - pip
        script:
          - pip install pytest pycodestyle
#          - pytest tests
          - pycodestyle --show-source .
    - step:
        name: Test building EGG
        image: timvancann/miniconda3-gcc
        script:
          - conda env create -f environment.yml
          - source activate name-matching
          - ./compile_library.sh
  branches:
    master:
    - step:
        name: Check PEP8 codestyle and run tests
        image: python:3.5.2
        caches:
        script:
          - pip install pytest pycodestyle
#          - pytest tests
          - pycodestyle --show-source .
    - step:
        name: Build EGG
        image: timvancann/miniconda3-gcc
        script:
          - conda env create -f environment.yml
          - source activate name-matching
          - ./compile_library.sh
        artifacts:
          - dist/*.egg
#    - step:
#        name: Deploy to azure blob store
#        image: microsoft/azure-cli
#        script:
#          - az login --service-principal -u ${AZ_USER_ID} -p ${AZ_PASSWORD} --tenant ${AZ_TENANT_ID}
#          - az storage blob upload -f dist/string_matching.egg -c prod -n deployment/name-matching/dist/string_matching.egg --account-key ${AZ_STORAGE_KEY} --account-name ${AZ_STORAGE_ACCOUNT}
#          - az storage blob upload -f match_operators.py -c prod -n deployment/name-matching/match_operators.py --account-key ${AZ_STORAGE_KEY} --account-name ${AZ_STORAGE_ACCOUNT}
    - step:
        name: Deploy to databricks fs
        image: timvancann/databricks-cli
        script:
          - touch ~/.databrickscfg
          - echo "[DEFAULT]" >> ~/.databrickscfg
          - echo "host = ${DB_HOST}" >> ~/.databrickscfg
          - echo "token = ${DB_TOKEN}" >> ~/.databrickscfg
          - cat ~/.databrickscfg

          - databricks fs cp --overwrite dist/string_matching.egg dbfs:/libraries/name_matching/string_matching.egg
          - databricks fs cp --overwrite match_operators.py dbfs:/libraries/name_matching/match_operators.py
          - databricks fs cp --overwrite match_contacts.py dbfs:/libraries/name_matching/match_contacts.py
          - databricks fs cp --overwrite join_new_operators_with_persistent_uuid.py dbfs:/libraries/name_matching/join_new_operators_with_persistent_uuid.py

