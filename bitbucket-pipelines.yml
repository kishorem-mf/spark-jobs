# Check https://confluence.atlassian.com/x/x4UWN for more examples.
# Validator: https://bitbucket-pipelines.atlassian.io/validator

clone:
  depth: 1

options:
  docker: true

pipelines:
  default:
    - step: &dockerlint
        name: Dockerlint
        script:
        - make dockerlint
    - step: &docker
        name: Build image
        script:
        - docker build -t ulohubimages.azurecr.io/airflow:${BITBUCKET_BUILD_NUMBER} .
    - step: &pylint
        name: pylint
        image: ulohubimages.azurecr.io/airflow:${BITBUCKET_BUILD_NUMBER}
        script:
          - pip install pylint
          - bash ./scripts/pylint.sh --rcfile=.pylintrc ./ohub
    - step: &syntax
        name: Check PEP8 codestyle and run tests
        image: ulohubimages.azurecr.io/airflow:${BITBUCKET_BUILD_NUMBER}
        script:
          - bash ./lint.sh
    - step: &dags
        name: Verify DAG integrity
        image:
          name: ulohubimages.azurecr.io/airflow:${BITBUCKET_BUILD_NUMBER}
        script:
          - bash ./test.sh

  branches:
    master:
    - step: *dockerlint
    - step: *docker
    - step: *syntax
    - step: *dags
    - step:
        name: Build image for azure
        image: microsoft/azure-cli
        script:
          - docker tag ulohubimages.azurecr.io/airflow:${BITBUCKET_BUILD_NUMBER} ulohubimages.azurecr.io/airflow:latest
          - docker login ulohubimages.azurecr.io -u ${AZ_CONTAINER_REGISTRY_USER_ID} -p ${AZ_CONTAINER_REGISTRY_PASSWORD}
          - docker push ulohubimages.azurecr.io/airflow:latest
          - docker push ulohubimages.azurecr.io/airflow:${BITBUCKET_BUILD_NUMBER}
    - step:
        name: Deploy Airflow in kubernetes Azure
        image: microsoft/azure-cli
        script:
          - az login --service-principal -u ${AZ_USER_ID} -p ${AZ_PASSWORD} --tenant ${AZ_TENANT_ID}
          - az acs kubernetes install-cli
          - az aks get-credentials -g bieno-da-s-60072-containers-rg -n ul-ohub2-aks-dev-we

          - airflowimage="ulohubimages.azurecr.io/airflow:${BITBUCKET_BUILD_NUMBER}"
          - kubectl set image deployment/airflow-webserver webserver=${airflowimage}
          - kubectl set image deployment/airflow-scheduler scheduler=${airflowimage}
