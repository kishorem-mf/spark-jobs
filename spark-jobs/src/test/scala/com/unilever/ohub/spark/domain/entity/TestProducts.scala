package com.unilever.ohub.spark.domain.entity

import java.sql.Timestamp

object TestProducts extends TestProducts

trait TestProducts {

  // format: OFF
  lazy val defaultProduct: Product = Product(
    id = "id-1",
    creationTimestamp = new Timestamp(1542205922011L),
    concatId = "country-code~source-name~source-entity-id",
    countryCode = "country-code",
    customerType = Product.customerType,
    dateCreated = None,
    dateUpdated = None,
    isActive = true,
    isGoldenRecord = true,
    ohubId = Some("ohub-id"),
    name = "product-name",
    sourceEntityId = "source-entity-id",
    sourceName = "source-name",
    ohubCreated = Timestamp.valueOf("2015-06-30 13:49:00.0"),
    ohubUpdated = Timestamp.valueOf("2015-06-30 13:49:00.0"),
    // specific fields
    additives = List.empty,
    allergens = List.empty,
    availabilityHint = None,
    benefits = None,
    brandCode = None,
    brandName = None,
    categoryByMarketeer = None,
    categoryCodeByMarketeer = None,
    categoryLevel1 = None,
    categoryLevel2 = None,
    categoryLevel3 = None,
    categoryLevel4 = None,
    categoryLevel5 = None,
    categoryLevel6 = None,
    categoryLevel7 = None,
    categoryLevel8 = None,
    categoryLevel9 = None,
    categoryLevel10 = None,
    categoryLevel11 = None,
    categoryLevel12 = None,
    categoryLevel13 = None,
    code = None,
    codeType = None,
    consumerUnitLoyaltyPoints = None,
    consumerUnitPriceInCents = None,
    containerCode = None,
    containerName = None,
    currency = None,
    defaultPackagingType = None,
    description = None,
    dietetics = List.empty,
    distributionUnitLoyaltyPoints = None,
    distributionUnitPriceInCents = None,
    eanConsumerUnit = None,
    eanDistributionUnit = None,
    hasConsumerUnit = None,
    hasDistributionUnit = None,
    imageId = None,
    ingredients = None,
    isAvailable = None,
    isDistributionUnitOnlyProduct = None,
    isLoyaltyReward = None,
    isTopProduct = None,
    isUnileverProduct = None,
    itemType = None,
    language = None,
    lastModifiedDate = None,
    nameSlug = None,
    number = None,
    nutrientTypes = List.empty,
    nutrientValues = List.empty,
    orderScore = None,
    packagingCode = None,
    packagingName = None,
    portionSize = None,
    portionUnit = None,
    preparation = None,
    productCodes = List.empty,
    productType = None,
    solutionCopy = None,
    subBrandCode = None,
    subBrandName = None,
    subCategoryByMarketeer = None,
    subCategoryCode = None,
    subCategoryName = None,
    `type` = Some("Loyalty"),
    unit = None,
    unitPrice = None,
    youtubeUrl = None,
    //BDL fields
    salesOrgId = None,
    distributionChannel = None,
    division = None,
    shortName = None,
    materialTypeCode = None,
    availabilityStatus = None,
    unitOfMeasure = None,
    pricingReferenceMaterialCode = None,
    comCode = None,
    eanPallet = None,
    categoryCode = None,
    productPricingHierarchyLevel1 = None,
    productPricingHierarchyLevel2 = None,
    productPricingHierarchyLevel3 = None,
    priceClassificationCode = None,
    volumeRebateGroupCode = None,
    pricingReferenceMaterialGroupCode = None,
    materialGroup2Code = None,
    materialGroup3Code = None,
    materialGroup5Code = None,
    consumerUnitPerCaseValue = None,
    consumerUnitPerPalletValue = None,
    casePerPalletValue = None,
    layersPerPalletValue = None,
    casesPerLayerValue = None,
    palletsPerCaseValue = None,
    netWeight = None,
    grossWeight = None,
    volume = None,
    length = None,
    width = None,
    height = None,
    caseHeight = None,
    caseLength = None,
    caseWidth = None,
    caseGrossWeight = None,
    consumerUnitHeight = None,
    consumerUnitLength = None,
    consumerUnitWidth = None,
    consumerUnitGrossWeight = None,
    palletLength = None,
    palletWidth = None,
    palletHeight = None,
    grossPalletWeight = None,
    // other fields
    additionalFields = Map(),
    ingestionErrors = Map(),
    url=None,
    previewImageUrl=None,
    imageUrl=None,
    packshotUrl=None,
    convenienceLevel=None
  )
  lazy val defaultProductSifu: ProductSifu = ProductSifu(
    brandCode=None,
    brandName=None,
    ingredients=None,
    language=None,
    lastModifiedDate=None,
    subBrandName=None,
    youtubeUrl=None,
    productNumber=None,
    productCode=None,
    duEanCode=None,
    cuEanCode=None,
    country=None,
    packagingName=None,
    productType=None,
    url=None,
    loyaltyReward=None,
    categoryCode=None,
    categoryName=None,
    subCategoryCode=None,
    subCategoryName=None,
    packagingCode=None,
    image1Id=None,
    packshotUrl=None,
    allergens=List.empty,
    nutrientTypes = List.empty,
    nutrientValues = List.empty,
    cuPriceInCents = Option.empty,
    duPriceInCents = Option.empty,
    packshotResizedUrl = None,
    name= None,
    number= None,
    productName= None,
    categoryCodes_1= None,
    subCategoryCodes_1= None,
    subCategoryNames_1= None,
    extractedImageUrl= None,
    extractedPreviewImageUrl= None,
    extractedImageId= None,
    extractedNutritionalType=List.empty,
    extractedNutritionalValue=List.empty,
    dachClaimFooterTexts=List.empty,
    code=None,
    subBrandCode=None,
    extractedPer100gAsPrep=None,
    per100gAsPrepOffPackUnitOfMeasurement=None,
    itemType=None,
    isUnileverProduct=None,
    convenienceLevel=None,
    description=None
  )
  // format: ON
}
